{"version":3,"sources":["BooksAPI.js","components/Header.js","components/Book.js","components/Shelf.js","components/Shelves.js","components/Search.js","components/SearchButton.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","Header","state","react_default","a","createElement","className","Component","Book","_this2","this","displayedThumbnail","props","imageLinks","thumbnail","style","width","height","backgroundImage","onChange","event","changeShelf","target","value","assignedShelf","disabled","title","authors","join","Shelf","map","key","components_Book","Shelves","allBooks","currentlyReading","filter","wantToRead","read","console","log","components_Shelf","Search","showModal","searchedBooks","updateQuery","_this","setState","updateSearchedBooks","BooksAPI","error","evalBooks","searchedBook","react_router_dom","to","type","placeholder","SearchButton","BooksApp","showSearchPage","updateSearch","changeBookShelf","response","newList","slice","listBook","length","push","resp","_this3","react_router","path","render","components_Search","exact","components_Header","components_Shelves","components_SearchButton","React","ReactDOM","src_App","document","getElementById"],"mappings":"4QACMA,EAAM,wCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,GAaNS,EAAS,SAACC,EAAMC,GAAP,OACpBC,MAAK,GAAAC,OAAId,EAAJ,WAAAc,OAAiBH,EAAKI,IAAM,CAC/BC,OAAQ,MACRT,QAAQU,OAAAC,EAAA,EAAAD,CAAA,GACHV,EADE,CAELY,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEV,YACtBW,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UAERC,EAAS,SAACC,GAAD,OACpBd,MAAK,GAAAC,OAAId,EAAJ,WAAkB,CACrBgB,OAAQ,OACRT,QAAQU,OAAAC,EAAA,EAAAD,CAAA,GACHV,EADE,CAELY,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEK,YACtBJ,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAK,GAAI,OAAIA,EAAKC,SC9BRC,oNAVXC,MAAQ,2EAEJ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,6BALOE,cC2BNC,6MA1BXN,MAAQ,2EACC,IAAAO,EAAAC,KACDC,EAAqBD,KAAKE,MAAM9B,KAAK+B,WACzCH,KAAKE,MAAM9B,KAAK+B,WAAWC,UAAY,GACvC,OACIX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaS,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAKC,gBAAe,QAAAjC,OAAU0B,EAAV,QAC7ER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UAAQc,SAAU,SAACC,GAAD,OAAWX,EAAKG,MAAMS,YAAYZ,EAAKG,MAAM9B,KAAMsC,EAAME,OAAOC,QAChFA,MAAOb,KAAKE,MAAMY,eAClBrB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,OAAOE,UAAQ,GAA7B,cACAtB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,oBAAd,qBACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,cAAd,gBACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,QAAd,QACApB,EAAAC,EAAAC,cAAA,UAAQkB,MAAM,QAAd,WAINpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcI,KAAKE,MAAM9B,KAAK4C,OAC7CvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAiBI,KAAKE,MAAM9B,KAAK6C,SAAWjB,KAAKE,MAAM9B,KAAK6C,QAAQC,KAAK,OAAU,YArB3FrB,aCiCJsB,6MA/BX3B,MAAQ,2EAIC,IAAAO,EAAAC,KACcA,KAAKE,MAAMZ,MAC9B,OAEIG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAmBI,KAAKE,MAAMc,OAC5CvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACbI,KAAKE,MAAMZ,MAAM8B,IAAK,SAAAhD,GAAI,OACvBqB,EAAAC,EAAAC,cAAA,MAAI0B,IAAKjD,EAAKI,IACdiB,EAAAC,EAAAC,cAAC2B,EAAD,CACIlD,KAAMA,EACNuC,YAAcZ,EAAKG,MAAMS,YACzBG,cAAe1C,EAAKC,qBAlBxBwB,aCmLL0B,6MAlLX/B,MAAQ,2EAEJ,IAAMgC,EAASxB,KAAKE,MAAMsB,SACpBC,EAAmBD,EAASE,OAAO,SAAAtD,GAAI,MAAmB,qBAAfA,EAAKC,QAChDsD,EAAaH,EAASE,OAAO,SAAAtD,GAAI,MAAmB,eAAfA,EAAKC,QAC1CuD,EAAOJ,EAASE,OAAO,SAAAtD,GAAI,MAAmB,SAAfA,EAAKC,QAE1C,OADAwD,QAAQC,IAAI,YAAaN,GAEzB/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoC,EAAD,CAAOzC,MAAOmC,EAAkBT,MAAO,oBAAqBL,YAAaX,KAAKE,MAAMS,cACpFlB,EAAAC,EAAAC,cAACoC,EAAD,CAAOzC,MAAOqC,EAAYX,MAAO,eAAgBL,YAAaX,KAAKE,MAAMS,cAF3E,IAGElB,EAAAC,EAAAC,cAACoC,EAAD,CAAOzC,MAAOsC,EAAMZ,MAAO,OAAQL,YAAaX,KAAKE,MAAMS,uBAbjDd,aCqFPmC,6MAlFXxC,MAAQ,CACJyC,WAAW,EACX7C,MAAO,GACP8C,cAAe,MAGlBC,YAAc,SAAC/C,GACZgD,EAAKC,SAAS,CACZjD,MAAOA,IAETgD,EAAKE,oBAAoBlD,MAG3BkD,oBAAsB,SAAClD,GACjBA,EACFmD,EAAgBnD,GAAOJ,KAAK,SAACkD,GAC1B,GAAIA,EAAcM,MAChBJ,EAAKC,SAAS,CAAEH,cAAe,SAC1B,KACE5C,EAAS8C,EAAKlC,MAAdZ,MACDmD,EAAYP,EAAcd,IAAI,SAAAsB,GAOlC,OANApD,EAAM8B,IAAI,SAAAhD,GAIR,OAHIsE,EAAalE,KAAOJ,EAAKI,KAC3BkE,EAAetE,GAEVA,IAEFsE,IAETN,EAAKC,SAAS,CAAEH,cAAeO,OAInCL,EAAKC,SAAS,CAAEH,cAAe,8EAG7B,IAAAnC,EAAAC,KACL,OACIP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAMC,GAAG,IAAIhD,UAAU,gBAAvB,SAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAUbH,EAAAC,EAAAC,cAAA,SAAOkD,KAAK,OAAOC,YAAY,4BAA4BjC,MAAOb,KAAKR,MAAMJ,MAAOqB,SAAU,SAACC,GAAD,OAAWX,EAAKoC,YAAYzB,EAAME,OAAOC,YAI3IpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACfI,KAAKR,MAAM0C,cAAcd,IAAI,SAAAsB,GAC5B,IAAIrE,EAAQ,OAIZ,OAHA0B,EAAKG,MAAMZ,MAAM8B,IAAI,SAAAhD,GAAI,OACvBA,EAAKI,KAAOkE,EAAalE,GAAKH,EAAQD,EAAKC,MAAQ,KAGnDoB,EAAAC,EAAAC,cAAA,MAAI0B,IAAKqB,EAAalE,IACtBiB,EAAAC,EAAAC,cAAC2B,EAAD,CACElD,KAAMsE,EACN/B,YAAaZ,EAAKG,MAAMS,YACxBG,cAAezC,iBArEVwB,aCiBNkD,6MAjBXvD,MAAQ,2EAEJ,OAIQC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAGbH,EAAAC,EAAAC,cAACgD,EAAA,EAAD,CAAMC,GAAG,WAAUnD,EAAAC,EAAAC,cAAA,sCAVVE,aC2EZmD,6MAnEbxD,MAAQ,CAONyD,gBAAgB,EAChB3D,MAAO,GACPF,MAAO,MAGT8D,aAAe,SAAA1D,GACbqC,QAAQC,IAAI,mBAAoBtC,GAChC4C,EAAKC,SAAS,CAACY,eAAgBzD,OAQjC2D,gBAAiB,SAAC/E,EAAMC,GACtBkE,EACUnE,EAAMC,GACbW,KAAK,SAAAoE,GACJ,IAAIC,EAAUjB,EAAK5C,MAAMF,MAAMgE,MAAM,GAC/BhE,EAAQ+D,EAAQ3B,OAAO,SAAA6B,GAAQ,OAAIA,EAAS/E,KAAOJ,EAAKI,KAC1Dc,EAAMkE,OACRlE,EAAM,GAAGjB,MAAQA,GAEjBgF,EAAQI,KAAKrF,GACbA,EAAKC,MAAQA,GAGf+D,EAAKC,SAAS,CAAC/C,MAAO+D,0FAjBR,IAAAtD,EAAAC,KPVpB1B,MAAK,GAAAC,OAAId,EAAJ,UAAiB,CAAEO,YACrBgB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAK,GAAI,OAAIA,EAAKC,QOSDN,KAAK,SAAC0E,GAAD,OAAU3D,EAAKsC,SAAS,CAAC/C,MAAOoE,uCAoBhD,IAAAC,EAAA3D,KACP,OACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAOC,KAAK,UAAUC,OAAQ,kBAExBrE,EAAAC,EAAAC,cAACoE,EAAD,CACAd,eAAgBU,EAAKT,aACrB5D,MAAOqE,EAAKnE,MAAMF,MAClBqB,YAAagD,EAAKR,qBAMrB1D,EAAAC,EAAAC,cAACiE,EAAA,EAAD,CAAOI,OAAK,EAACH,KAAK,IAAIC,OAAS,kBAC/BrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEXH,EAAAC,EAAAC,cAACsE,EAAD,MACAxE,EAAAC,EAAAC,cAACuE,EAAD,CAAS1C,SAAUmC,EAAKnE,MAAMF,MAAOqB,YAAagD,EAAKR,kBACvD1D,EAAAC,EAAAC,cAACwE,EAAD,CAAclB,eAAgBU,EAAKT,2BA3D1BkB,IAAMvE,iBCL7BwE,IAASP,OAAOrE,EAAAC,EAAAC,cAACgD,EAAA,EAAD,KAAgBlD,EAAAC,EAAAC,cAAC2E,EAAD,OAAyBC,SAASC,eAAe","file":"static/js/main.868c00d0.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (\r\n            <div className=\"list-books-title\">\r\n              <h1>MyReads</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass Book extends Component {\r\n    state = {  }\r\n    render() { \r\n        let displayedThumbnail = this.props.book.imageLinks ?\r\n        this.props.book.imageLinks.thumbnail : '';\r\n        return (  \r\n            <div className=\"book\">\r\n            <div className=\"book-top\">\r\n              <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(\"${displayedThumbnail}\"` }}></div>\r\n              <div className=\"book-shelf-changer\">\r\n                <select onChange={(event) => this.props.changeShelf(this.props.book, event.target.value)}\r\n                  value={this.props.assignedShelf}>\r\n                  <option value=\"move\" disabled>Move to...</option>\r\n                  <option value=\"currentlyReading\">Currently Reading</option>\r\n                  <option value=\"wantToRead\">Want to Read</option>\r\n                  <option value=\"read\">Read</option>\r\n                  <option value=\"none\">None</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"book-title\">{this.props.book.title}</div>\r\n            <div className=\"book-authors\">{(this.props.book.authors && this.props.book.authors.join(\", \")) || \"\"}</div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Book;","import React, { Component } from 'react';\r\nimport Book from './Book';\r\n\r\nclass Shelf extends Component {\r\n    state = {  }\r\n\r\n    \r\n\r\n    render() { \r\n        const shelfBooks = this.props.books;\r\n        return ( \r\n\r\n            <div className=\"bookshelf\">\r\n                <h2 className=\"bookshelf-title\">{this.props.title}</h2>\r\n                <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                {this.props.books.map( book => (\r\n                    <li key={book.id}>\r\n                    <Book\r\n                        book={book}\r\n                        changeShelf= {this.props.changeShelf}\r\n                        assignedShelf={book.shelf}\r\n\r\n                    />\r\n                    </li>\r\n\r\n                ))}\r\n                </ol>\r\n                </div>\r\n      </div>\r\n\r\n         );\r\n    }\r\n}\r\n \r\nexport default Shelf;","import React, { Component } from 'react';\r\nimport Shelf from './Shelf';\r\n\r\nclass Shelves extends Component {\r\n    state = {  }\r\n    render () {\r\n        const allBooks=this.props.allBooks;\r\n        const currentlyReading = allBooks.filter(book => book.shelf === \"currentlyReading\");\r\n        const wantToRead = allBooks.filter(book => book.shelf === \"wantToRead\");\r\n        const read = allBooks.filter(book => book.shelf === \"read\");\r\n        console.log(\"I AM HERE\", allBooks);\r\n        return (\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n            <Shelf books={currentlyReading} title={\"Currently Reading\"} changeShelf={this.props.changeShelf}/>\r\n            <Shelf books={wantToRead} title={\"Want to Read\"} changeShelf={this.props.changeShelf}/> {/* <Shelf />* want to read*/}\r\n            <Shelf books={read} title={\"Read\"} changeShelf={this.props.changeShelf}/>{/* <Shelf /> read*/}\r\n          </div>\r\n        </div>\r\n    \r\n      )\r\n    \r\n    \r\n      }\r\n    // render() { \r\n    //    return(\r\n    //     <div className=\"list-books-content\">\r\n    //     <div>\r\n    //     <div className=\"bookshelf\">\r\n    //               <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n    //               <div className=\"bookshelf-books\">\r\n    //                 <ol className=\"books-grid\">\r\n    //                   <li>\r\n    //                     <div className=\"book\">\r\n    //                       <div className=\"book-top\">\r\n    //                         <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: 'url(\"http://books.google.com/books/content?id=PGR2AwAAQBAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE73-GnPVEyb7MOCxDzOYF1PTQRuf6nCss9LMNOSWBpxBrz8Pm2_mFtWMMg_Y1dx92HT7cUoQBeSWjs3oEztBVhUeDFQX6-tWlWz1-feexS0mlJPjotcwFqAg6hBYDXuK_bkyHD-y&source=gbs_api\")' }}></div>\r\n    //                         <div className=\"book-shelf-changer\">\r\n    //                           <select>\r\n    //                             <option value=\"move\" disabled>Move to...</option>\r\n    //                             <option value=\"currentlyReading\">Currently Reading</option>\r\n    //                             <option value=\"wantToRead\">Want to Read</option>\r\n    //                             <option value=\"read\">Read</option>\r\n    //                             <option value=\"none\">None</option>\r\n    //                           </select>\r\n    //                         </div>\r\n    //                       </div>\r\n    //                       <div className=\"book-title\">To Kill a Mockingbird</div>\r\n    //                       <div className=\"book-authors\">Harper Lee</div>\r\n    //                     </div>\r\n    //                   </li>\r\n    //                   <li>\r\n    //                     <div className=\"book\">\r\n    //                       <div className=\"book-top\">\r\n    //                         <div className=\"book-cover\" style={{ width: 128, height: 188, backgroundImage: 'url(\"http://books.google.com/books/content?id=yDtCuFHXbAYC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72RRiTR6U5OUg3IY_LpHTL2NztVWAuZYNFE8dUuC0VlYabeyegLzpAnDPeWxE6RHi0C2ehrR9Gv20LH2dtjpbcUcs8YnH5VCCAH0Y2ICaKOTvrZTCObQbsfp4UbDqQyGISCZfGN&source=gbs_api\")' }}></div>\r\n    //                         <div className=\"book-shelf-changer\">\r\n    //                           <select>\r\n    //                             <option value=\"move\" disabled>Move to...</option>\r\n    //                             <option value=\"currentlyReading\">Currently Reading</option>\r\n    //                             <option value=\"wantToRead\">Want to Read</option>\r\n    //                             <option value=\"read\">Read</option>\r\n    //                             <option value=\"none\">None</option>\r\n    //                           </select>\r\n    //                         </div>\r\n    //                       </div>\r\n    //                       <div className=\"book-title\">Ender's Game</div>\r\n    //                       <div className=\"book-authors\">Orson Scott Card</div>\r\n    //                     </div>\r\n    //                   </li>\r\n    //                 </ol>\r\n    //               </div>\r\n    //             </div>\r\n    //             <div className=\"bookshelf\">\r\n    //               <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n    //               <div className=\"bookshelf-books\">\r\n    //                 <ol className=\"books-grid\">\r\n    //                   <li>\r\n    //                     <div className=\"book\">\r\n    //                       <div className=\"book-top\">\r\n    //                         <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: 'url(\"http://books.google.com/books/content?id=uu1mC6zWNTwC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE73pGHfBNSsJG9Y8kRBpmLUft9O4BfItHioHolWNKOdLavw-SLcXADy3CPAfJ0_qMb18RmCa7Ds1cTdpM3dxAGJs8zfCfm8c6ggBIjzKT7XR5FIB53HHOhnsT7a0Cc-PpneWq9zX&source=gbs_api\")' }}></div>\r\n    //                         <div className=\"book-shelf-changer\">\r\n    //                           <select>\r\n    //                             <option value=\"move\" disabled>Move to...</option>\r\n    //                             <option value=\"currentlyReading\">Currently Reading</option>\r\n    //                             <option value=\"wantToRead\">Want to Read</option>\r\n    //                             <option value=\"read\">Read</option>\r\n    //                             <option value=\"none\">None</option>\r\n    //                           </select>\r\n    //                         </div>\r\n    //                       </div>\r\n    //                       <div className=\"book-title\">1776</div>\r\n    //                       <div className=\"book-authors\">David McCullough</div>\r\n    //                     </div>\r\n    //                   </li>\r\n    //                   <li>\r\n    //                     <div className=\"book\">\r\n    //                       <div className=\"book-top\">\r\n    //                         <div className=\"book-cover\" style={{ width: 128, height: 192, backgroundImage: 'url(\"http://books.google.com/books/content?id=wrOQLV6xB-wC&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72G3gA5A-Ka8XjOZGDFLAoUeMQBqZ9y-LCspZ2dzJTugcOcJ4C7FP0tDA8s1h9f480ISXuvYhA_ZpdvRArUL-mZyD4WW7CHyEqHYq9D3kGnrZCNiqxSRhry8TiFDCMWP61ujflB&source=gbs_api\")' }}></div>\r\n    //                         <div className=\"book-shelf-changer\">\r\n    //                           <select>\r\n    //                             <option value=\"move\" disabled>Move to...</option>\r\n    //                             <option value=\"currentlyReading\">Currently Reading</option>\r\n    //                             <option value=\"wantToRead\">Want to Read</option>\r\n    //                             <option value=\"read\">Read</option>\r\n    //                             <option value=\"none\">None</option>\r\n    //                           </select>\r\n    //                         </div>\r\n    //                       </div>\r\n    //                       <div className=\"book-title\">Harry Potter and the Sorcerer's Stone</div>\r\n    //                       <div className=\"book-authors\">J.K. Rowling</div>\r\n    //                     </div>\r\n    //                   </li>\r\n    //                 </ol>\r\n    //               </div>\r\n    //             </div>\r\n    //             <div className=\"bookshelf\">\r\n    //               <h2 className=\"bookshelf-title\">Read</h2>\r\n    //               <div className=\"bookshelf-books\">\r\n    //                 <ol className=\"books-grid\">\r\n    //                   <li>\r\n    //                     <div className=\"book\">\r\n    //                       <div className=\"book-top\">\r\n    //                         <div className=\"book-cover\" style={{ width: 128, height: 192, backgroundImage: 'url(\"http://books.google.com/books/content?id=pD6arNyKyi8C&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE70Rw0CCwNZh0SsYpQTkMbvz23npqWeUoJvVbi_gXla2m2ie_ReMWPl0xoU8Quy9fk0Zhb3szmwe8cTe4k7DAbfQ45FEzr9T7Lk0XhVpEPBvwUAztOBJ6Y0QPZylo4VbB7K5iRSk&source=gbs_api\")' }}></div>\r\n    //                         <div className=\"book-shelf-changer\">\r\n    //                           <select>\r\n    //                             <option value=\"move\" disabled>Move to...</option>\r\n    //                             <option value=\"currentlyReading\">Currently Reading</option>\r\n    //                             <option value=\"wantToRead\">Want to Read</option>\r\n    //                             <option value=\"read\">Read</option>\r\n    //                             <option value=\"none\">None</option>\r\n    //                           </select>\r\n    //                         </div>\r\n    //                       </div>\r\n    //                       <div className=\"book-title\">The Hobbit</div>\r\n    //                       <div className=\"book-authors\">J.R.R. Tolkien</div>\r\n    //                     </div>\r\n    //                   </li>\r\n    //                   <li>\r\n    //                     <div className=\"book\">\r\n    //                       <div className=\"book-top\">\r\n    //                         <div className=\"book-cover\" style={{ width: 128, height: 174, backgroundImage: 'url(\"http://books.google.com/books/content?id=1q_xAwAAQBAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE712CA0cBYP8VKbEcIVEuFJRdX1k30rjLM29Y-dw_qU1urEZ2cQ42La3Jkw6KmzMmXIoLTr50SWTpw6VOGq1leINsnTdLc_S5a5sn9Hao2t5YT7Ax1RqtQDiPNHIyXP46Rrw3aL8&source=gbs_api\")' }}></div>\r\n    //                         <div className=\"book-shelf-changer\">\r\n    //                           <select>\r\n    //                             <option value=\"move\" disabled>Move to...</option>\r\n    //                             <option value=\"currentlyReading\">Currently Reading</option>\r\n    //                             <option value=\"wantToRead\">Want to Read</option>\r\n    //                             <option value=\"read\">Read</option>\r\n    //                             <option value=\"none\">None</option>\r\n    //                           </select>\r\n    //                         </div>\r\n    //                       </div>\r\n    //                       <div className=\"book-title\">Oh, the Places You'll Go!</div>\r\n    //                       <div className=\"book-authors\">Seuss</div>\r\n    //                     </div>\r\n    //                   </li>\r\n    //                   <li>\r\n    //                     <div className=\"book\">\r\n    //                       <div className=\"book-top\">\r\n    //                         <div className=\"book-cover\" style={{ width: 128, height: 192, backgroundImage: 'url(\"http://books.google.com/books/content?id=32haAAAAMAAJ&printsec=frontcover&img=1&zoom=1&imgtk=AFLRE72yckZ5f5bDFVIf7BGPbjA0KYYtlQ__nWB-hI_YZmZ-fScYwFy4O_fWOcPwf-pgv3pPQNJP_sT5J_xOUciD8WaKmevh1rUR-1jk7g1aCD_KeJaOpjVu0cm_11BBIUXdxbFkVMdi&source=gbs_api\")' }}></div>\r\n    //                         <div className=\"book-shelf-changer\">\r\n    //                           <select>\r\n    //                             <option value=\"move\" disabled>Move to...</option>\r\n    //                             <option value=\"currentlyReading\">Currently Reading</option>\r\n    //                             <option value=\"wantToRead\">Want to Read</option>\r\n    //                             <option value=\"read\">Read</option>\r\n    //                             <option value=\"none\">None</option>\r\n    //                           </select>\r\n    //                         </div>\r\n    //                       </div>\r\n    //                       <div className=\"book-title\">The Adventures of Tom Sawyer</div>\r\n    //                       <div className=\"book-authors\">Mark Twain</div>\r\n    //                     </div>\r\n    //                   </li>\r\n    //                 </ol>\r\n    //               </div>\r\n    //             </div>\r\n          \r\n    //     </div>\r\n    //   </div>\r\n    //    )\r\n    // }\r\n}\r\n \r\nexport default Shelves;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport * as BooksAPI from \"../BooksAPI\";\r\nimport Book from './Book';\r\n\r\nclass Search extends Component {\r\n    state = { \r\n        showModal: false,\r\n        query: \"\",\r\n        searchedBooks: []\r\n     }\r\n\r\n     updateQuery = (query) => {\r\n        this.setState({\r\n          query: query\r\n        })\r\n        this.updateSearchedBooks(query);\r\n      }\r\n\r\n      updateSearchedBooks = (query) => {\r\n        if (query) {\r\n          BooksAPI.search(query).then((searchedBooks) => {\r\n             if (searchedBooks.error) {\r\n               this.setState({ searchedBooks: [] });\r\n             } else {\r\n               const {books} = this.props;\r\n               const evalBooks = searchedBooks.map(searchedBook => {\r\n                 books.map(book => {\r\n                   if (searchedBook.id === book.id) {\r\n                     searchedBook = book;\r\n                   }\r\n                   return book;\r\n                 });\r\n                 return searchedBook;\r\n               })\r\n               this.setState({ searchedBooks: evalBooks });\r\n             }\r\n           })\r\n         } else {\r\n           this.setState({ searchedBooks: [] });\r\n         }\r\n       }\r\n    render() { \r\n        return ( \r\n            <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n                <Link to=\"/\" className=\"close-search\">Close</Link>\r\n              {/* <button className=\"close-search\" onClick={() => this.setState({ showSearchPage: false })}>Close</button> */}\r\n              <div className=\"search-books-input-wrapper\">\r\n                {/*\r\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n                  You can find these search terms here:\r\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n                  you don't find a specific author or title. Every search is limited by search terms.\r\n                */}\r\n                \r\n                <input type=\"text\" placeholder=\"Search by title or author\" value={this.state.query} onChange={(event) => this.updateQuery(event.target.value)}/>\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n            <ol className=\"books-grid\">\r\n          {this.state.searchedBooks.map(searchedBook => {\r\n            let shelf = \"none\";\r\n            this.props.books.map(book => (\r\n              book.id === searchedBook.id ? shelf = book.shelf : ''\r\n            ));\r\n            return (\r\n              <li key={searchedBook.id}>\r\n              <Book\r\n                book={searchedBook}\r\n                changeShelf={this.props.changeShelf}\r\n                assignedShelf={shelf}\r\n              />\r\n\r\n              </li>\r\n            );\r\n          })\r\n          }\r\n          </ol>\r\n            </div>\r\n          </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Search;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass SearchButton extends Component {\r\n    state = {  }\r\n    render() { \r\n        return (  \r\n            \r\n            \r\n            \r\n                <div className=\"open-search\">\r\n                {/* <button onClick={() => this.props.showSearchPage(true)}>Add a book</button>\r\n                 */}\r\n                  <Link to=\"/search\"><button>Add a book </button></Link>\r\n                </div>\r\n            \r\n\r\n        );\r\n    }\r\n}\r\n \r\nexport default SearchButton;\r\n\r\n","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\nimport Header from './components/Header';\r\nimport Shelves from './components/Shelves';\r\nimport Search from './components/Search';\r\nimport SearchButton from './components/SearchButton';\r\n\r\n\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    /**\r\n     * TODO: Instead of using this state variable to keep track of which page\r\n     * we're on, use the URL in the browser's address bar. This will ensure that\r\n     * users can use the browser's back and forward buttons to navigate between\r\n     * pages, as well as provide a good URL they can bookmark and share.\r\n     */\r\n    showSearchPage: false,\r\n    books: [],\r\n    query: \"\"\r\n  }\r\n\r\n  updateSearch = state => {\r\n    console.log(\"provide Results \", state)\r\n    this.setState({showSearchPage: state})\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then((resp) => this.setState({books: resp}));\r\n  }\r\n\r\n  changeBookShelf =(book, shelf) => {\r\n    BooksAPI\r\n      .update(book, shelf)\r\n      .then(response => {\r\n        let newList = this.state.books.slice(0);\r\n        const books = newList.filter(listBook => listBook.id === book.id);\r\n        if (books.length) {\r\n          books[0].shelf = shelf;\r\n        } else {\r\n          newList.push(book);\r\n          book.shelf = shelf;\r\n          \r\n        }\r\n        this.setState({books: newList});\r\n      })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n       <Route path=\"/search\" render={() =>(\r\n\r\n             <Search \r\n             showSearchPage={this.updateSearch} \r\n             books={this.state.books} \r\n             changeShelf={this.changeBookShelf}\r\n             \r\n             />\r\n             )}/>\r\n\r\n        \r\n          <Route exact path=\"/\" render ={() => (\r\n          <div className=\"list-books\">\r\n\r\n              <Header />\r\n              <Shelves allBooks={this.state.books} changeShelf={this.changeBookShelf}/>\r\n              <SearchButton showSearchPage={this.updateSearch}/>\r\n\r\n          </div>\r\n         )}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<BrowserRouter ><App /></BrowserRouter>, document.getElementById('root'))\r\n"],"sourceRoot":""}